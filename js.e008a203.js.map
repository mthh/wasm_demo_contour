{"version":3,"sources":["node_modules/d3-array/src/ascending.js","node_modules/d3-array/src/bisector.js","node_modules/d3-array/src/number.js","node_modules/d3-array/src/bisect.js","node_modules/d3-array/src/count.js","node_modules/d3-array/src/cross.js","node_modules/d3-array/src/cumsum.js","node_modules/d3-array/src/descending.js","node_modules/d3-array/src/variance.js","node_modules/d3-array/src/deviation.js","node_modules/d3-array/src/extent.js","node_modules/d3-array/src/fsum.js","node_modules/internmap/src/index.js","node_modules/d3-array/src/identity.js","node_modules/d3-array/src/group.js","node_modules/d3-array/src/permute.js","node_modules/d3-array/src/sort.js","node_modules/d3-array/src/groupSort.js","node_modules/d3-array/src/array.js","node_modules/d3-array/src/constant.js","node_modules/d3-array/src/ticks.js","node_modules/d3-array/src/nice.js","node_modules/d3-array/src/threshold/sturges.js","node_modules/d3-array/src/bin.js","node_modules/d3-array/src/max.js","node_modules/d3-array/src/min.js","node_modules/d3-array/src/quickselect.js","node_modules/d3-array/src/quantile.js","node_modules/d3-array/src/threshold/freedmanDiaconis.js","node_modules/d3-array/src/threshold/scott.js","node_modules/d3-array/src/maxIndex.js","node_modules/d3-array/src/mean.js","node_modules/d3-array/src/median.js","node_modules/d3-array/src/merge.js","node_modules/d3-array/src/minIndex.js","node_modules/d3-array/src/pairs.js","node_modules/d3-array/src/range.js","node_modules/d3-array/src/least.js","node_modules/d3-array/src/leastIndex.js","node_modules/d3-array/src/greatest.js","node_modules/d3-array/src/greatestIndex.js","node_modules/d3-array/src/scan.js","node_modules/d3-array/src/shuffle.js","node_modules/d3-array/src/sum.js","node_modules/d3-array/src/transpose.js","node_modules/d3-array/src/zip.js","node_modules/d3-array/src/every.js","node_modules/d3-array/src/some.js","node_modules/d3-array/src/filter.js","node_modules/d3-array/src/map.js","node_modules/d3-array/src/reduce.js","node_modules/d3-array/src/reverse.js","node_modules/d3-array/src/difference.js","node_modules/d3-array/src/disjoint.js","node_modules/d3-array/src/set.js","node_modules/d3-array/src/intersection.js","node_modules/d3-array/src/superset.js","node_modules/d3-array/src/subset.js","node_modules/d3-array/src/union.js","node_modules/d3-array/src/index.js","node_modules/d3-geo/src/math.js","node_modules/d3-geo/src/noop.js","node_modules/d3-geo/src/stream.js","node_modules/d3-geo/src/area.js","node_modules/d3-geo/src/cartesian.js","node_modules/d3-geo/src/bounds.js","node_modules/d3-geo/src/centroid.js","node_modules/d3-geo/src/constant.js","node_modules/d3-geo/src/compose.js","node_modules/d3-geo/src/rotation.js","node_modules/d3-geo/src/circle.js","node_modules/d3-geo/src/clip/buffer.js","node_modules/d3-geo/src/pointEqual.js","node_modules/d3-geo/src/clip/rejoin.js","node_modules/d3-geo/src/polygonContains.js","node_modules/d3-geo/src/clip/index.js","node_modules/d3-geo/src/clip/antimeridian.js","node_modules/d3-geo/src/clip/circle.js","node_modules/d3-geo/src/clip/line.js","node_modules/d3-geo/src/clip/rectangle.js","node_modules/d3-geo/src/clip/extent.js","node_modules/d3-geo/src/length.js","node_modules/d3-geo/src/distance.js","node_modules/d3-geo/src/contains.js","node_modules/d3-geo/src/graticule.js","node_modules/d3-geo/src/interpolate.js","node_modules/d3-geo/src/identity.js","node_modules/d3-geo/src/path/area.js","node_modules/d3-geo/src/path/bounds.js","node_modules/d3-geo/src/path/centroid.js","node_modules/d3-geo/src/path/context.js","node_modules/d3-geo/src/path/measure.js","node_modules/d3-geo/src/path/string.js","node_modules/d3-geo/src/path/index.js","node_modules/d3-geo/src/transform.js","node_modules/d3-geo/src/projection/fit.js","node_modules/d3-geo/src/projection/resample.js","node_modules/d3-geo/src/projection/index.js","node_modules/d3-geo/src/projection/conic.js","node_modules/d3-geo/src/projection/cylindricalEqualArea.js","node_modules/d3-geo/src/projection/conicEqualArea.js","node_modules/d3-geo/src/projection/albers.js","node_modules/d3-geo/src/projection/albersUsa.js","node_modules/d3-geo/src/projection/azimuthal.js","node_modules/d3-geo/src/projection/azimuthalEqualArea.js","node_modules/d3-geo/src/projection/azimuthalEquidistant.js","node_modules/d3-geo/src/projection/mercator.js","node_modules/d3-geo/src/projection/conicConformal.js","node_modules/d3-geo/src/projection/equirectangular.js","node_modules/d3-geo/src/projection/conicEquidistant.js","node_modules/d3-geo/src/projection/equalEarth.js","node_modules/d3-geo/src/projection/gnomonic.js","node_modules/d3-geo/src/projection/identity.js","node_modules/d3-geo/src/projection/naturalEarth1.js","node_modules/d3-geo/src/projection/orthographic.js","node_modules/d3-geo/src/projection/stereographic.js","node_modules/d3-geo/src/projection/transverseMercator.js","node_modules/d3-geo/src/index.js","node_modules/d3-timer/src/timer.js","node_modules/d3-timer/src/timeout.js","node_modules/d3-timer/src/interval.js","node_modules/d3-timer/src/index.js","js/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["a","b","NaN","f","delta","compare","left","x","lo","hi","length","mid","d","ascendingComparator","center","i","right","ascending","numbers","values","valueof","undefined","value","index","bisectRight","ascendingBisect","bisector","bisectLeft","bisectCenter","number","count","array","empty","arrayify","Array","from","reducer","reduce","cross","pop","lengths","map","j","fill","product","some","push","cumsum","sum","Float64Array","v","variance","mean","deviation","Math","sqrt","min","max","Adder","constructor","_partials","_n","add","p","y","abs","valueOf","n","fsum","adder","fcumsum","InternMap","Map","entries","key","keyof","Object","defineProperties","_intern","_key","set","get","intern_get","has","intern_set","delete","intern_delete","InternSet","Set","group","keys","nest","identity","groups","rollup","rollups","unique","indexes","Error","regroup","source","sort","F","Symbol","iterator","TypeError","Uint32Array","c","permute","groupSort","ak","av","bk","bv","prototype","slice","e10","e5","e2","start","stop","reverse","ticks","step","tickIncrement","isFinite","r0","round","r1","power","floor","log","LN10","error","pow","tickStep","step0","step1","nice","prestep","ceil","LN2","domain","extent","threshold","sturges","histogram","data","isArray","xz","x0","x1","tz","tn","m","shift","bin","bins","bisect","_","arguments","constant","thresholds","call","quickselect","k","z","s","exp","sd","t","swap","quantile","i0","value0","subarray","quantileSorted","maxIndex","flatten","arrays","merge","minIndex","pairs","pairof","pair","previous","first","range","least","defined","minValue","element","leastIndex","greatest","maxValue","greatestIndex","scan","shuffler","random","i1","matrix","transpose","row","every","test","filter","mapper","done","next","difference","others","other","disjoint","is","intersection","out","superset","o","subset","union","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","hypot","sin","sign","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","areaRingSum","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","equatorial","inflection","phii","lambdai","antimeridian","angle","rangeCompare","rangeContains","feature","merged","deltaMax","Infinity","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","y0","z0","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","ring","precision","circle","apply","r","line","lines","rejoin","concat","result","Intersection","points","entry","e","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","pointEqual","link","current","isSubject","longitude","polygon","winding","point0","sinPhi1","cosPhi1","point1","absDelta","arc","phiArc","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","to","cr","smallRadius","notHemisphere","visible","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","polar","q1","code","c0","v0","v00","point2","y1","ax","ay","dx","dy","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","cache","cacheStream","lengthSum","lengthStream","lengthLineStart","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","x00","y00","area","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","projection","projectionStream","contextStream","path","pathArea","measure","pathMeasure","pathBounds","pathCentroid","methods","transformer","TransformStream","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","h","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","project","delta2","resample","resampleNone","resampleLineTo","depth","d2","phi2","x2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","scaleTranslate","sx","sy","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","theta","preclip","clipAntimeridian","postclip","recenter","reset","clipAngle","clipCircle","reflectX","reflectY","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0y","conicEqualArea","multiplex","streams","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","iterations","equalEarthRaw","l2","l6","gnomonicRaw","sa","tx","ty","kx","ky","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","setTimeout","clearNow","Timer","_call","_time","_next","timer","callback","delay","time","restart","timerFlush","wake","nap","poke","sleep","clearTimeout","clearInterval","setInterval","elapsed","total","_restart","tick","container","document","querySelector","canvas","createElement","setAttribute","appendChild","getContext","d3geoPath","_values","d3range","_dv","ft","beginPath","fillStyle","properties","color","d3timer","dv","n_thresholds","JSON","parse","wasmModule","make_contours","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","id","Promise","resolve","LazyPromise","reject","loadBundles","then","all","loadBundle","bundleLoaders","registerBundleLoader","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","executor","promise","onSuccess","onError"],"mappings":"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","file":"js.e008a203.js","sourceRoot":"..","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","export default function(x) {\n  return x;\n}\n","import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\n\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = ascending] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(f);\n}\n","import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n","import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n","import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n","import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import min from \"./min.js\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export default function every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n","export default function some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n","export default function filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n","export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n","export default function reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n","export default function reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n","export default function difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n","export default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new Set();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n","export default function set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n","import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n","export default function superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    if (set.has(o)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      set.add(value);\n      if (Object.is(o, value)) break;\n    }\n  }\n  return true;\n}\n","import superset from \"./superset.js\";\n\nexport default function subset(values, other) {\n  return superset(other, values);\n}\n","export default function union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n","export {default as bisect, bisectRight, bisectLeft, bisectCenter} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {Adder, fsum, fcumsum} from \"./fsum.js\";\nexport {default as group, groups, index, indexes, rollup, rollups} from \"./group.js\";\nexport {default as groupSort} from \"./groupSort.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as nice} from \"./nice.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle, shuffler} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\nexport {default as every} from \"./every.js\";\nexport {default as some} from \"./some.js\";\nexport {default as filter} from \"./filter.js\";\nexport {default as map} from \"./map.js\";\nexport {default as reduce} from \"./reduce.js\";\nexport {default as reverse} from \"./reverse.js\";\nexport {default as sort} from \"./sort.js\";\nexport {default as difference} from \"./difference.js\";\nexport {default as disjoint} from \"./disjoint.js\";\nexport {default as intersection} from \"./intersection.js\";\nexport {default as subset} from \"./subset.js\";\nexport {default as superset} from \"./superset.js\";\nexport {default as union} from \"./union.js\";\nexport {InternMap, InternSet} from \"internmap\";\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","export default x => x;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n","export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer.js\";\n\nexport {\n  default as timeout\n} from \"./timeout.js\";\n\nexport {\n  default as interval\n} from \"./interval.js\";\n","import wasmModule from '../crate/Cargo.toml'\nimport { range as d3range } from 'd3-array';\nimport { geoPath as d3geoPath } from 'd3-geo';\nimport { timer as d3timer } from 'd3-timer';\n\nconst container = document.querySelector('.canvas-container');\nconst canvas = document.createElement('canvas');\ncanvas.setAttribute('width', 600);\ncanvas.setAttribute('height', 500);\ncontainer.appendChild(canvas);\n\nconst context = canvas.getContext(\"2d\");\nconst path = d3geoPath(null, context);\n\nconst n = 140;\nconst m = 140;\nconst _values = new Float64Array((n + 2) * (m + 2));\n\nconst value = (x, y) => Math.sin(x + y) * Math.sin(x - y);\nfor (var j = -0.5, k = 0; j < m + 1; ++j) {\n  for (var i = -0.5; i < n + 1; ++i, ++k) {\n    _values[k] = value(i / n * 19.2 - 9.6, 5 - j / m * 15);\n  }\n}\nconst thresholds = d3range(-1.2, 1.2, 0.22);\nconst _dv = (t) => (t % 1200) / 1200 * 0.22\n\n// const value = (x, y) => 0.26 * (x ** 2 + y ** 2) - 0.48 * x * y;\n// for (var j = 0; j < m + 2; ++j) {\n//   for (var i = 0; i < n + 2; ++i) {\n//     _values[j * (n + 2) + i] = value(i / 7 - 10.5, m / 7 - j / 7 - 10.5);\n//   }\n// }\n// const thresholds = d3range(-1, 10, 1);\n// const _dv = (t) => (t % 1000) / 1000 * 2;\n\n\ncontext.scale(canvas.width / (n + 2), canvas.width / (n + 2));\ncontext.translate(-0.5, -0.5);\n\nd3timer((t) => {\n  const dv = _dv(t);\n  const n_thresholds = new Float64Array(thresholds.map(v => v + dv));\n  const result = JSON.parse(wasmModule.make_contours(_values, n_thresholds, n + 2, m + 2));\n  result.features.forEach(fill);\n});\n\nfunction fill(ft) {\n  context.beginPath();\n  path(ft.geometry);\n  context.fillStyle = ft.properties.color\n  context.fill();\n}\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedFloat64Memory0 = new Float64Array();\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @param {Float64Array} values\n* @param {Float64Array} thresholds\n* @param {number} x\n* @param {number} y\n* @returns {string}\n*/\n__exports. make_contours = function(values, thresholds, x, y) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArrayF64ToWasm0(values, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayF64ToWasm0(thresholds, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.make_contours(retptr, ptr0, len0, ptr1, len1, x, y);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\n__exports. __wbg_new_abda76e883ba8a5f = function() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports. __wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\n__exports. __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n\n\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './wasm_demo_contour_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './wasm_demo_contour_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './wasm_demo_contour_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}